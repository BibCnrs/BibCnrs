services:
  bib-api-test:
    build:
      context: .
      dockerfile: ./ops/bib-api/Dockerfile
      target: dev
    command: ["yarn", "workspace", "@bibcnrs/bib-api", "run", "test:watch"]
    tty: true
    develop:
      watch:
        - action: sync
          path: ./packages/bib-api/src
          target: /app/packages/bib-api/src
        - action: sync
          path: ./packages/bib-api/vitest.config.mts
          target: /app/packages/bib-api/vitest.config.mts
        - action: rebuild
          path: ./packages/bib-api/test/seed.ts
        - action: rebuild
          path: ./packages/bib-api/prisma/schema.prisma
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./packages/bib-api/package.json
    depends_on:
      bib-db-test:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://postgres:S3cr3t@bib-db-test/bibcnrs
      - NODE_ENV=${NODE_ENV:-development}
      - MAIL_SERVER_HOST= bib-mail
      - MAIL_SERVER_PORT= 1025
      - cookie_secret=S3cr3t!C00kie
      - header_secret=S3cr3t!H34d3r
      - admin_secret=S3cr3t!4dm1n
      - BIB_CONTENT_DELIVERY_HOST=http://localhost:3000/files
      - OLD_API_URL=https://bib-preprod.inist.fr
      - MAIL_FROM=bibcnrs@bib.cnrs.fr
      - MAIL_TO=assistance-portail@inist.fr
      - BIB_UPLOADS_DIR=/app/packages/bib-api/uploads
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: ${API_MAX_MEMORY:-2G}

  bib-front-test:
    build:
      context: .
      dockerfile: ./ops/bib-front/Dockerfile
      target: dev
    environment:
      - NODE_ENV=development
      - VITE_ENV=development
      - VITE_BIBAPI_HOST=http://localhost:3000/api
      - VITE_SOURCE_MAP=true
    depends_on:
      - bib-api-test

  bib-db-test:
    image: postgres:16.3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=S3cr3t
      - POSTGRES_DB=bibcnrs_test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "15432:5432"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: ${API_MAX_MEMORY:-1G}
