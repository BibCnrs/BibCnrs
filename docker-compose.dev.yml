services:
  api:
    build:
      context: .
      dockerfile: ./packages/api/Dockerfile
      target: dev
    volumes:
      - ./../storage/uploads:/app/packages/api/uploads
    develop:
      watch:
        - action: sync
          path: ./packages/api/src
          target: /app/packages/api/src
        - action: rebuild
          path: ./packages/api/prisma/schema.prisma
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./packages/api/package.json
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - RENATER_FAKE_LOGIN=true
      - DATABASE_URL=postgres://postgres:S3cr3t@db/bibcnrs
      - NODE_ENV=${NODE_ENV:-development}
      - BIBAPI_HOST= http://localhost:3000/api
      - MAIL_SERVER_HOST=mail
      - MAIL_SERVER_PORT=1025
      - cookie_secret=${cookie_secret}
      - header_secret=${header_secret}
      - admin_secret=${admin_secret}
      - ticket_secret=${ticket_secret}
      - BIB_CONTENT_DELIVERY_HOST=http://localhost:3000/files
      - ebsco_host=${ebsco_host}
      - EZ_UNPAYWALL_URL=${EZ_UNPAYWALL_URL}
      - EZ_UNPAYWALL_KEY=${EZ_UNPAYWALL_KEY}
      - METADORE_URL=${METADORE_URL}
      - METADORE_API_KEY=${METADORE_API_KEY}
      - DOAJ_URL=${DOAJ_URL}
      - REDIS_HOST=redis
      - bib_admin_host=http://localhost:3000/admin
      - MAIL_FROM=bibcnrs@bib.cnrs.fr
      - MAIL_TO=assistance-portail@inist.fr
      - BIB_UPLOADS_DIR=/app/packages/api/uploads
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: ${API_MAX_MEMORY:-2G}

  front:
    build:
      context: .
      dockerfile: ./packages/front/Dockerfile
      target: dev
    environment:
      - NODE_ENV=development
      - VITE_ENV=development
      - VITE_BIBAPI_HOST=http://localhost:3000/api
      - VITE_SOURCE_MAP=true
    develop:
      watch:
        - action: sync
          path: ./packages/front/src
          target: /app/packages/front/src
        - action: sync
          path: ./packages/front/public
          target: /app/packages/front/public
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./packages/front/package.json
    depends_on:
      - api

  admin:
    build:
      context: .
      dockerfile: ./packages/bib-admin/Dockerfile
      target: dev
    environment:
      - NODE_ENV=development
      - VITE_ENV=development
      - VITE_BIBAPI_HOST=http://localhost:3000/api
      - VITE_SOURCE_MAP=true
    develop:
      watch:
        - action: sync
          path: ./packages/bib-admin/src
          target: /app/packages/bib-admin/src
        - action: sync
          path: ./packages/bib-admin/public
          target: /app/packages/bib-admin/public
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./packages/bib-admin/package.json
    depends_on:
      - api

  proxy:
    image: nginx:1.25-alpine
    ports:
      - "3000:80"
    depends_on:
      - api
      - front
      - admin
    develop:
      watch:
        - action: sync+restart
          path: ./packages/proxy/nginx.dev.conf
          target: /etc/nginx/nginx.conf
    volumes:
      - ./packages/proxy/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./../storage/uploads:/usr/share/nginx/html/files

  db:
    image: postgres:16.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=S3cr3t
      - POSTGRES_DB=bibcnrs
    volumes:
      - ./../storage/postgresql:/var/lib/postgresql/data
      - ./../storage/backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: ${API_MAX_MEMORY:-1G}

  redis:
    image: redis:7.2.5
    restart: always

  mail:
    image: maildev/maildev:2.1.0
    ports:
      - "1080:1080"
