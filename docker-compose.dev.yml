services:
  bib-api:
    build:
      context: .
      dockerfile: ./ops/bib-api/Dockerfile
      target: dev
    user: "${UID}:${GID}"
    volumes:
      - ./packages/bib-api:/app/packages/bib-api
    working_dir: /app/packages/bib-api
    depends_on:
      bib-db:
        condition: service_healthy
    environment:
      - COREPACK_ENABLE_DOWNLOAD_PROMPT=0
      - POSTGRES_URL=postgres://bibcnrs:S3cr3t@bib-db/bibcnrs
      - NODE_ENV=${NODE_ENV:-development}
      - OLD_API_URL=${OLD_API_URL}
      - MAIL_SERVER_HOST= bib-mail
      - MAIL_SERVER_PORT= 1025
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: ${API_MAX_MEMORY:-2G}

  bib-front:
    user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: ./ops/bib-front/Dockerfile
      target: dev
    environment:
      - COREPACK_ENABLE_DOWNLOAD_PROMPT=0
      - NODE_ENV=development
      - VITE_ENV=development
      - VITE_BIBAPI_HOST=http://localhost:3000/api
      - VITE_SOURCE_MAP=true
    volumes:
      - ./packages/bib-front:/app/packages/bib-front
    working_dir: /app/packages/bib-front
    depends_on:
      - bib-api

  bib-admin:
    user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: ./ops/bib-admin/Dockerfile
      target: dev
    environment:
      - COREPACK_ENABLE_DOWNLOAD_PROMPT=0
      - NODE_ENV=development
      - VITE_ENV=development
      - VITE_BIBAPI_HOST=http://localhost:3000/api
      - VITE_SOURCE_MAP=true
    volumes:
      - ./packages/bib-admin:/app/packages/bib-admin
    working_dir: /app/packages/bib-admin
    depends_on:
      - bib-api

  bib-proxy:
    build:
      context: .
      dockerfile: ./ops/bib-proxy/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - bib-api
      - bib-front
      - bib-admin

  bib-db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=bibcnrs
      - POSTGRES_PASSWORD=S3cr3t
      - POSTGRES_DB=bibcnrs
    volumes:
      - bib-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: ${API_MAX_MEMORY:-1G}

  bib-mail:
    image: maildev/maildev:2.1.0
    ports:
      - "1080:1080"
volumes:
  bib-db-data:
